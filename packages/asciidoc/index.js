import"astro/loaders";import{z as e}from"astro/zod";import{loadConfig as Z}from"c12";import U from"fast-glob";import{bundledLanguages as Y,createHighlighter as G,bundledThemes as K}from"shiki";import V from"slugify";import D from"prismjs";import J from"prismjs/components/index.js";import X from"asciidoctor";var N=e.function().args(e.string()).returns(e.promise(e.array(e.string()))).implement(async i=>U("**/*.{adoc,asciidoc}",{cwd:i})),R=e.function(e.tuple([e.string(),e.record(e.string(),e.union([e.string(),e.number(),e.boolean()]))]),e.string()),Q=e.object({author:e.string().regex(/[A-Z][a-z]+\s+[A-Z][a-z]+/,"The author's name must be a name and last name both capitalized with a space in between").optional(),email:e.string().email(),backend:e.string(),filetype:e.boolean(),localdir:e.string(),localdate:e.string().date(),localdatetime:e.string().datetime(),localtime:e.string().time(),localyear:e.number().int(),attributeMissing:e.enum(["drop","drop-line","skip","warn"]),attributeUndefined:e.enum(["drop","drop-line"]),experimental:e.boolean(),appendixCaption:e.string(),appendixNumber:e.string(),appendixRefsig:e.string(),cautionCaption:e.string(),cautionNumber:e.string(),cautionRefsig:e.string(),cautionSignifier:e.string(),exampleCaption:e.string(),exampleNumber:e.string(),figureCaption:e.string(),figureNumber:e.number(),footnoteNumber:e.number(),importantCaption:e.string(),lastUpdateLabel:e.string(),listingCaption:e.string(),listingNumber:e.number(),noteCaption:e.string(),partRefsig:e.string(),partSignifier:e.string(),prefaceTitle:e.string(),tableCaption:e.string(),tableNumber:e.string(),tipCaption:e.string(),tocTitle:e.string(),untitledLabel:e.string(),warningCaption:e.string(),appName:e.string(),idprefix:e.string(),idseparator:e.string(),leveloffset:e.enum(["0","1","2","3","4","5"]).transform(i=>parseInt(i)),partnums:e.boolean(),setanchors:e.boolean(),sectids:e.boolean(),sectlinks:e.boolean(),sectnums:e.boolean(),sectnumlevels:e.enum(["0","1","2","3","4","5"]).transform(i=>parseInt(i)),titleSeparator:e.string(),toc:e.enum(["auto","left","right","macro","preamble"]).or(e.literal(!0)),toclevels:e.enum(["1","2","3","4","5"]).transform(i=>parseInt(i)),fragment:e.boolean(),stylesheet:e.string()}).partial(),H=Object.keys(K),F=e.enum([H[0],...H.slice(1)]),ee=e.enum(["markup","css","clike","javascript","abap","actionscript","ada","apacheconf","apl","applescript","arduino","arff","asciidoc","asm6502","aspnet","autohotkey","autoit","bash","basic","batch","bison","brainfuck","bro","c","csharp","cpp","coffeescript","clojure","crystal","csp","css-extras","d","dart","diff","django","docker","eiffel","elixir","elm","erb","erlang","fsharp","flow","fortran","gedcom","gherkin","git","glsl","gml","go","graphql","groovy","haml","handlebars","haskell","haxe","http","hpkp","hsts","ichigojam","icon","inform7","ini","io","j","java","jolie","json","julia","keyman","kotlin","latex","less","liquid","lisp","livescript","lolcode","lua","makefile","markdown","markup-templating","matlab","mel","mizar","monkey","n4js","nasm","nginx","nim","nix","nsis","objectivec","ocaml","opencl","oz","parigp","parser","pascal","perl","php","php-extras","plsql","plaintext","powershell","processing","prolog","properties","protobuf","pug","puppet","pure","python","q","qore","r","jsx","tsx","renpy","reason","rest","rip","roboconf","ruby","rust","sas","sass","scss","scala","scheme","smalltalk","smarty","sql","soy","stylus","swift","tap","tcl","textile","tt2","twig","typescript","vbnet","velocity","verilog","vhdl","vim","visual-basic","wasm","wiki","xeora","xojo","xquery","yaml"]).array(),te=e.object({sourceHighlighter:e.literal("prism").optional(),prismLanguages:ee.optional().default(["markup","css","javascript","typescript","markdown","yaml","json","jsx","tsx","asciidoc","bash","php","git"])}),ie=e.object({sourceHighlighter:e.literal("shiki").optional(),shikiTheme:e.object({light:F,dark:F,dim:F.optional()}).refine(({light:i,dark:t})=>i!==t,{path:["shikiTheme.dark","shikiTheme.light"],message:"The light theme and dark theme must be different from each other"}).superRefine(({light:i,dark:t,dim:r},s)=>{i===r&&s.addIssue({path:["shikiTheme.light","shikiTheme.dim"],code:"custom",message:"The light theme must not be equal to the light theme"}),t===r&&s.addIssue({path:["shikiTheme.dark","shikiTheme.dim"],code:"custom",message:"The light theme must not be equal to the light theme"})}).optional()}),re=e.object({attributes:e.union([te,ie]).and(Q).optional().default({sourceHighlighter:"shiki",shikiTheme:{dark:"github-light",light:"github-dark",dim:"github-dark-dimmed"}}),blocks:e.record(e.string(),e.object({context:e.enum(["example","listing","literal","pass","quote","sidebar"]),render:R})).optional(),macros:e.object({inline:e.record(e.string(),e.object({context:e.enum(["quoted","anchor"]),render:R})).optional(),block:e.record(e.string(),e.object({context:e.enum(["example","listing","literal","pass","quote","sidebar"]),render:R})).optional()}).optional()}).strict(),W=async i=>{let{config:t,configFile:r}=await Z({cwd:i,name:"asciidoc",omit$Keys:!0});return Object.keys(t).length===0?t:(e.string().regex(/asciidoc.config.m(?:ts|js)/,"The asciidoc config file must be a mts or mjs file").parse(r),re.parse(t))},T=class i{#e=X();static#t;#i;constructor(){if(i.#t)return i.#t;i.#t=this}registerPrism_JS(t){J(t),this.#e.SyntaxHighlighter.register("prism",{initialize(r,s,o){this.$$name="prism",this.super(r,s,o)},format(r,s){return`<pre class="${this.$$name} language-${s}">${r.getContent()}</pre>`},handlesHighlighting:()=>!0,highlight(r,s,o="plaintext"){return D.highlight(s,D.languages[o],o)}})}async registerShiki(t){this.#i=this.#i&&await G({themes:t.dim?[t.light,t.dark,t.dim]:[t.light,t.dark],langs:Object.keys(Y)});let r=this.#i;this.#e.SyntaxHighlighter.register("shiki",{initialize(s,o,h){this.super(s,o,h),this.$$name="shiki"},handlesHighlighting:()=>!0,highlight(s,o,h){return r?.codeToHtml(o,{lang:h,cssVariablePrefix:"--faa-shiki-",defaultColor:"light",themes:t})}})}registerBlocksAndMacrosFromConfig=(t,r)=>{this.#e.Extensions.register(function(){if(t)for(let[s,{context:o,render:h}]of Object.entries(t))this.block(s,function(){this.process(function(x,a,p){return this.createBlock(x,o,h(a.getString(),p),p)})});if(r?.inline)for(let[s,{context:o,render:h}]of Object.entries(r.inline))this.inlineMacro(s,function(){this.process(function(x,a,p){return this.createInline(x,o,h(a,p))})});if(r?.block)for(let[s,{context:o,render:h}]of Object.entries(r.block))this.blockMacro(s,function(){this.process(function(x,a,p){return this.createBlock(x,o,h(a,p),p)})})})};loadFileWithAttributes(t,r){return this.#e.loadFile(t,{attributes:r&&Object.fromEntries(Object.entries(r).map(([o,h])=>[s(o),h])),safe:10,catalog_assets:!0});function s(o){return o.replace(/[A-Z]/g,h=>`-${h.toLowerCase()}`)}}},j=i=>V(i,{lower:!0,trim:!0,remove:/[*+~.()'"!:@]/g});import{z as k}from"astro/zod";var se=/^(?:[a-zA-Z0-9_-]+,\s*|[a-zA-Z0-9_-]+(?:,\s+[a-zA-Z0-9_-]+)+,?)$/;function oe(i){let t={};for(let[r,s]of Object.entries(i)){if(s===""){t[r]=!0;continue}if(typeof s=="string"&&se.test(s)){t[r]=s.split(",").map(o=>o.trim()).filter(Boolean);continue}t[r]=s}return t}var C=class{constructor(t,r){this.pathRelativeToRoot=t;this.slug=r}},m;function ye(i){let t=new T;return{name:"forastro/asciidoc-loader",async load(r){k.string().regex(/\w+(?:\/\w+)*/,`A content folder name must be a string with word characters at the front only.
   Ex: content
   When referring to deeply nested folders in the project make sure you place a forward slash
   before each folder name after the parent folder name.
   Ex: src/content

   No spaces or special characters.
   `).parse(i);let{store:o,config:h,generateDigest:x,logger:a,collection:p,parseData:B,watcher:E}=r;a.info("Loading Asciidoc paths and config file");let O=h.root.pathname;m=m??await W(O);let q=await N(`${O}/${i}/${p}`);switch(m.attributes?.sourceHighlighter){case"shiki":m.attributes?.shikiTheme?await t.registerShiki(m.attributes.shikiTheme):a.error('Shiki theme not configured when sourceHighlighter is "shiki".');break;case"prism":"prismLanguages"in m.attributes?t.registerPrism_JS(m.attributes.prismLanguages):a.error('Prism languages not configured when sourceHighlighter is "prism".');break}Object.keys(m).length!==0&&(a.info("Creating Asciidoc Registry from using config file"),t.registerBlocksAndMacrosFromConfig(m.blocks,m.macros)),a.info("Clearing the store"),o.clear(),a.info("Extracting data from files then storing it");let y=new Map,A=/(?<filename>[\w\s\d-]+)(?<extension>\.[a-z]+)$/;for(let n of q){let b=n.match(A);if(!b)throw Error(`This path isn't correct.
                         A folder can use any set of characters but must end in a forward slash.
                         A filename must use word characters digits and whitespace no other characters.
                        `);let l=b.groups?.filename??"";if(!l)throw Error("There should be a word called filename in the word group");let c=`${i}/${p}/${n}`,f=t.loadFileWithAttributes(`${O}/${c}`,m.attributes),g=j(l);await z(c,g,f),y.set(l,new C(c,g))}let $=[".adoc",".asciidoc"];E?.on("add",async n=>{if(!$.some(w=>n.endsWith(w)))return;let l=n.match(A);if(!l)throw Error(`This path ${n} isn't correct.
                         A folder can use any set of characters but must end in a forward slash.
                         A filename must use word characters digits and whitespace no other characters.
                        `);a.info(`You added this file ${n} it's info will be now parsed an added to the store`);let c=l.groups?.filename??"";if(!c)throw Error("There should be a word called filename in the word group");let g=((w,P)=>{let _=P.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),v=new RegExp(`${_}.*`),I=w.match(v);if(!I)throw Error("Please place the values in the right place don't change any params");return I[0]})(n,i),S=t.loadFileWithAttributes(n,m?.attributes),d=j(c);await z(d,g,S),y.set(c,new C(g,d)),a.info(`Finished adding the file now you can go to /${d} depending on your route to access it.`)}),E?.on("change",async n=>{if(!$.some(g=>n.endsWith(g)))return;let l=n.match(A)?.[1]??"";a.info(`You changed this file ${l} the store is being updated`);let c=y.get(l);if(!c)throw Error(`A slug is supposed to exist using this file name ${l}.
                        Some thing is wrong with the loader please file a report
                        `);o.delete(c.slug);let f=t.loadFileWithAttributes(n,m?.attributes);await z(c.pathRelativeToRoot,c.slug,f),a.info("The store is updated")}),E?.on("unlink",n=>{if(!$.some(g=>n.endsWith(g)))return;let l=n.match(A);if(!l)throw Error(`This path isn't correct.
                         A folder can use any set of characters but must end in a forward slash.
                         A filename must use word characters digits and whitespace no other characters.
                        `);let c=l.groups?.filename??"";if(!c)throw Error("There should be a word called filename in the word group");a.info(`You deleted this file ${c}`);let f=y.get(c);if(!f)throw Error(`A slug is supposed to exist using this file name ${c}.
                        Some thing is wrong with the loader please file a report.
                        From unlink event using this path ${n}.
                        `);o.delete(f.slug),a.info("The store has now been updated!"),a.info("Finished")});async function z(n,b,l){let c=k.union([k.string(),k.number(),k.boolean()]),f=k.record(k.string().regex(/^(?<first_word>(?:[a-z0-9]+))(?<other_words_in_snake_or_dash_case>(?:-[a-z0-9]+|_[a-z0-9]+)*)$/,"You must write using dash case Ex: url-repo"),c.or(c.array())),g;try{let d=l.getAttributes(),w=oe(d);g=f.transform(P=>Object.fromEntries(Object.entries(P).map(([_,v])=>[_.replace(/[-_]([a-z])/g,(I,M)=>M.toUpperCase()),v]))).parse(w)}catch(d){if(d instanceof k.ZodError){a.error("All attributes must be written in dashed or snake case in files");for(let w of d.issues)a.error(`In this file ${n} this attribute ${w.path} has this problem ${w.message}`)}return}let S=await B({id:b,data:g,filePath:n});o.set({id:b,data:S,filePath:n,digest:x(g),rendered:{metadata:{frontmatter:S,imagePaths:l.getImages().map(d=>d.getTarget()),headings:l.getSections().map(d=>({text:d.getTitle()??"",depth:d.getLevel(),slug:j(d.getTitle()??"")}))},html:l.convert()}})}}}}import{z as u}from"astro/zod";var L=u.string().regex(/^(?<first_name>[A-Z][a-z.]+)\s+(?<middle_names>(?:[A-Z][a-z.]+\s)*)?(?<last_name>[A-Z][a-z]+)$/,"An author should have at least a first and last name both capitalized"),ae=u.object({doctitle:u.string().regex(/[\w\s\d]+/,"Please make sure your title is one with words letters and spaces"),docdate:u.string().date(),email:u.string().email(),localdate:u.string().date(),author:L,authors:u.union([L,L.array()]),createdAt:u.string().date(),description:u.string().min(35,"It's good for a description to at least be two sentences").max(160,"A title needs to be at least 160 characters max")}).transform(i=>{let{doctitle:t,docdate:r,...s}=i;return{title:t,updatedAt:r,...s}}),ne=u.enum(["draft","published","editing"]),Te=ae.and(u.object({stage:ne}));export{ne as ASCIIDOC_POST_STAGE,ae as asciidocBaseSchema,Te as asciidocDraftSchema,ye as asciidocLoader,oe as normalizeAsciiDocAttributes};
