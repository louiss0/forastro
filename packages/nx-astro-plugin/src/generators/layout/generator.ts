import type { Tree } from '@nx/devkit';
import {
  readProjectConfiguration,
  formatFiles,
  joinPathFragments,
} from '@nx/devkit';
import { join } from 'node:path';
import { toPascal } from '../../utils/naming.js';

interface Schema {
  project: string;
  name: string;
  directory?: string;
}

export default async function generator(tree: Tree, options: Schema) {
  const proj = readProjectConfiguration(tree, options.project);
  const layoutName = toPascal(options.name);
  const baseDir = options.directory
    ? options.directory.replace(/\\/g, '/')
    : '';
  const targetDir = joinPathFragments(proj.root, 'src', 'layouts', baseDir);
  const filePath = join(targetDir, `${layoutName}.astro`);

  if (!tree.exists(filePath)) {
    const contents = `---\n// Generated by @forastro/nx-astro-plugin:layout\nconst { children } = Astro.props;\n---\n\n<html><body><slot /></body></html>\n`;
    tree.write(filePath, contents);
  }

  await formatFiles(tree);
}
