import type { Tree } from '@nx/devkit';
import { readProjectConfiguration, formatFiles, joinPathFragments } from '@nx/devkit';
import { join } from 'node:path';

interface Schema {
  project: string;
  name: string;
  directory?: string;
}

const toKebab = (s: string) => s.trim().toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-+|-+$/g, '');

export default async function generator(tree: Tree, options: Schema) {
  const proj = readProjectConfiguration(tree, options.project);
  const pageName = toKebab(options.name);
  const baseDir = options.directory ? options.directory.replace(/\\/g, '/') : '';
  const targetDir = joinPathFragments(proj.root, 'src', 'pages', baseDir);
  const filePath = join(targetDir, `${pageName}.astro`);

  if (!tree.exists(filePath)) {
    const contents = `---\n// Generated by @forastro/nx-astro-plugin:page\n// Replace with your page content.\n---\n\n<html><body><h1>${options.name}</h1></body></html>\n`;
    tree.write(filePath, contents);
  }

  await formatFiles(tree);
}