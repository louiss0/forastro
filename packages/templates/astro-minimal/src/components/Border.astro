---
import { BorderOrOutlineSizes } from "~/utilities/types";
import { allTailwindColors } from "~/utilities/constants";

/**
 ** The border component by default creates a border that surrounds a component
 ** It allows the user to pass in a border size for the border size
 ** It allows you to pass in a border color class
 ** This border color is valid is there to make sure that a valid tailwind class is passed in.
 ** Right now ts can't take the type that is appropriate for this.
 */

type Props = {
  borderSizeClass?: `border-${BorderOrOutlineSizes}`;
  borderColorClass?: string;
};

const borderColors = allTailwindColors.map((value) => `border-${value}`);
const { borderSizeClass, borderColorClass } = Astro.props;

const borderColorIsValid =
  typeof borderColorClass === "undefined"
    ? true
    : borderColorClass
        .split(" ")
        .every((classColor) =>
          borderColors.some((borderColor) => classColor.includes(borderColor))
        );

const errorMessage =
  () => `This class can only use border classes  you can use responsive and media classes but nothing else  
    remember the valid tailwind classes ${borderColors.join(", ")}
    `;
---

<div
  data-border-box
  class="border border-current"
  class:list={[borderColorClass, borderSizeClass]}
>
  {borderColorIsValid ? <slot /> : errorMessage()}
</div>
