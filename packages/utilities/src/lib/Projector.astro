---
import { getFromGlobalTemplateMap } from "../lib/helpers";

interface Props<T extends Record<string, unknown>> {
  templateName: Parameters<typeof getFromGlobalTemplateMap>[0];
  context?: T;
  children:((context?: T)=> unknown) | Array<astroHTML.JSX.HTMLAttributes> | string
}
const { templateName, context } = Astro.props;

const render = getFromGlobalTemplateMap(templateName);

if (!render) {
  throw new Error(
    `There is not template with this ${templateName} please use define template before using this component. 
    The id must be the same as templateName
     `
  );
}

const {slots} = Astro;

const defaultSlotRes = slots.has("default")  ?  await slots.render("default", [context]) : null


const html = await render(context, () => defaultSlotRes) 
---

<Fragment set:html={html} />
