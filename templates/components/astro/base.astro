---
export interface Props {
  title?: string;
  description?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  disabled?: boolean;
  href?: string;
  class?: string;
}

const {
  title = 'Default Title',
  description,
  variant = 'primary',
  size = 'md',
  disabled = false,
  href,
  class: className = '',
  ...rest
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2';
const variantClasses = {
  primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',
  secondary: 'bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500',
  outline: 'border border-gray-300 bg-transparent hover:bg-gray-50 focus:ring-gray-500'
};
const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-base',
  lg: 'px-6 py-3 text-lg'
};

const componentClasses = [
  baseClasses,
  variantClasses[variant],
  sizeClasses[size],
  disabled && 'opacity-50 cursor-not-allowed',
  className
].filter(Boolean).join(' ');

const Component = href ? 'a' : 'button';
---

<Component
  class={componentClasses}
  disabled={disabled && !href}
  href={href}
  {...rest}
>
  <div class="flex flex-col items-center">
    <span class="font-semibold">{title}</span>
    {description && (
      <span class="text-sm opacity-80">{description}</span>
    )}
  </div>
  <slot />
</Component>
